---
name: Test PHP Static Binaries

on:
  workflow_run:
    workflows: ["Build PHP Static Binaries (Multi-Platform)"]
    types: [completed]
  workflow_dispatch:

env:
  PHP_VERSION: "8.2.14"

jobs:
  test-linux:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: php-static-linux-amd64
          path: dist/

      - name: Test Linux binary
        run: |
          chmod +x scripts/test-binary.sh
          ./scripts/test-binary.sh dist/php-static-amd64-linux.tar.gz linux

  test-macos:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: php-static-macos-amd64
          path: dist/

      - name: Test macOS binary with Docker
        run: |
          chmod +x scripts/test-macos-docker.sh
          ./scripts/test-macos-docker.sh dist/php-static-amd64-macos.tar.gz

  test-windows:
    runs-on: windows-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: php-static-windows-amd64
          path: dist/

      - name: Test Windows binary
        run: |
          if (Test-Path "dist/php-static-amd64-windows.tar.gz") {
            Write-Host "✅ Windows binary found"
            Write-Host "Size: $((Get-Item 'dist/php-static-amd64-windows.tar.gz').Length) bytes"
          } else {
            Write-Host "❌ Windows binary not found"
            exit 1
          }

  create-release:
    runs-on: ubuntu-latest
    needs: [test-linux, test-macos, test-windows]
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          name: php-static-linux-amd64
          path: dist/
      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: php-static-macos-amd64
          path: dist/
      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: php-static-windows-amd64
          path: dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PHP_VERSION }}-static
          name: PHP ${{ env.PHP_VERSION }} Static Binaries
          body: |
            ## PHP ${{ env.PHP_VERSION }} Static Binaries
            ### Downloads
            - **Linux AMD64**: `php-static-amd64-linux.tar.gz`
            - **macOS AMD64**: `php-static-amd64-macos.tar.gz`
            - **Windows AMD64**: `php-static-amd64-windows.tar.gz`

            ### Usage
            1. Download the appropriate binary for your platform
            2. Extract: `tar -xzf php-static-amd64-*.tar.gz`
            3. Run: `./bin/php --version`

            ### Testing
            All binaries have been tested and verified to work correctly.
          files: |
            dist/php-static-amd64-linux.tar.gz
            dist/php-static-amd64-macos.tar.gz
            dist/php-static-amd64-windows.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
